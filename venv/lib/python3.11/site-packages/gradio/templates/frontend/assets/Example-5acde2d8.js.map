{"version":3,"file":"Example-5acde2d8.js","sources":["../../../../node_modules/.pnpm/@ffmpeg+util@0.12.1/node_modules/@ffmpeg/util/dist/esm/errors.js","../../../../node_modules/.pnpm/@ffmpeg+util@0.12.1/node_modules/@ffmpeg/util/dist/esm/const.js","../../../../node_modules/.pnpm/@ffmpeg+util@0.12.1/node_modules/@ffmpeg/util/dist/esm/index.js","../../../../node_modules/.pnpm/@ffmpeg+ffmpeg@0.12.7/node_modules/@ffmpeg/ffmpeg/dist/esm/const.js","../../../../node_modules/.pnpm/@ffmpeg+ffmpeg@0.12.7/node_modules/@ffmpeg/ffmpeg/dist/esm/utils.js","../../../../node_modules/.pnpm/@ffmpeg+ffmpeg@0.12.7/node_modules/@ffmpeg/ffmpeg/dist/esm/errors.js","../../../../node_modules/.pnpm/@ffmpeg+ffmpeg@0.12.7/node_modules/@ffmpeg/ffmpeg/dist/esm/classes.js","../../../../node_modules/.pnpm/mrmime@1.0.1/node_modules/mrmime/index.mjs","../../../../js/video/shared/utils.ts","../../../../js/video/shared/Video.svelte","../../../../js/video/Example.svelte"],"sourcesContent":["export const ERROR_RESPONSE_BODY_READER = new Error(\"failed to get response body reader\");\nexport const ERROR_INCOMPLETED_DOWNLOAD = new Error(\"failed to complete download\");\n","export const HeaderContentLength = \"Content-Length\";\n","import { ERROR_RESPONSE_BODY_READER, ERROR_INCOMPLETED_DOWNLOAD, } from \"./errors.js\";\nimport { HeaderContentLength } from \"./const.js\";\nconst readFromBlobOrFile = (blob) => new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n        const { result } = fileReader;\n        if (result instanceof ArrayBuffer) {\n            resolve(new Uint8Array(result));\n        }\n        else {\n            resolve(new Uint8Array());\n        }\n    };\n    fileReader.onerror = (event) => {\n        reject(Error(`File could not be read! Code=${event?.target?.error?.code || -1}`));\n    };\n    fileReader.readAsArrayBuffer(blob);\n});\n/**\n * An util function to fetch data from url string, base64, URL, File or Blob format.\n *\n * Examples:\n * ```ts\n * // URL\n * await fetchFile(\"http://localhost:3000/video.mp4\");\n * // base64\n * await fetchFile(\"data:<type>;base64,wL2dvYWwgbW9yZ...\");\n * // URL\n * await fetchFile(new URL(\"video.mp4\", import.meta.url));\n * // File\n * fileInput.addEventListener('change', (e) => {\n *   await fetchFile(e.target.files[0]);\n * });\n * // Blob\n * const blob = new Blob(...);\n * await fetchFile(blob);\n * ```\n */\nexport const fetchFile = async (file) => {\n    let data;\n    if (typeof file === \"string\") {\n        /* From base64 format */\n        if (/data:_data\\/([a-zA-Z]*);base64,([^\"]*)/.test(file)) {\n            data = atob(file.split(\",\")[1])\n                .split(\"\")\n                .map((c) => c.charCodeAt(0));\n            /* From remote server/URL */\n        }\n        else {\n            data = await (await fetch(file)).arrayBuffer();\n        }\n    }\n    else if (file instanceof URL) {\n        data = await (await fetch(file)).arrayBuffer();\n    }\n    else if (file instanceof File || file instanceof Blob) {\n        data = await readFromBlobOrFile(file);\n    }\n    else {\n        return new Uint8Array();\n    }\n    return new Uint8Array(data);\n};\n/**\n * importScript dynamically import a script, useful when you\n * want to use different versions of ffmpeg.wasm based on environment.\n *\n * Example:\n *\n * ```ts\n * await importScript(\"http://localhost:3000/ffmpeg.js\");\n * ```\n */\nexport const importScript = async (url) => new Promise((resolve) => {\n    const script = document.createElement(\"script\");\n    const eventHandler = () => {\n        script.removeEventListener(\"load\", eventHandler);\n        resolve();\n    };\n    script.src = url;\n    script.type = \"text/javascript\";\n    script.addEventListener(\"load\", eventHandler);\n    document.getElementsByTagName(\"head\")[0].appendChild(script);\n});\n/**\n * Download content of a URL with progress.\n *\n * Progress only works when Content-Length is provided by the server.\n *\n */\nexport const downloadWithProgress = async (url, cb) => {\n    const resp = await fetch(url);\n    let buf;\n    try {\n        // Set total to -1 to indicate that there is not Content-Type Header.\n        const total = parseInt(resp.headers.get(HeaderContentLength) || \"-1\");\n        const reader = resp.body?.getReader();\n        if (!reader)\n            throw ERROR_RESPONSE_BODY_READER;\n        const chunks = [];\n        let received = 0;\n        for (;;) {\n            const { done, value } = await reader.read();\n            const delta = value ? value.length : 0;\n            if (done) {\n                if (total != -1 && total !== received)\n                    throw ERROR_INCOMPLETED_DOWNLOAD;\n                cb && cb({ url, total, received, delta, done });\n                break;\n            }\n            chunks.push(value);\n            received += delta;\n            cb && cb({ url, total, received, delta, done });\n        }\n        const data = new Uint8Array(received);\n        let position = 0;\n        for (const chunk of chunks) {\n            data.set(chunk, position);\n            position += chunk.length;\n        }\n        buf = data.buffer;\n    }\n    catch (e) {\n        console.log(`failed to send download progress event: `, e);\n        // Fetch arrayBuffer directly when it is not possible to get progress.\n        buf = await resp.arrayBuffer();\n        cb &&\n            cb({\n                url,\n                total: buf.byteLength,\n                received: buf.byteLength,\n                delta: 0,\n                done: true,\n            });\n    }\n    return buf;\n};\n/**\n * toBlobURL fetches data from an URL and return a blob URL.\n *\n * Example:\n *\n * ```ts\n * await toBlobURL(\"http://localhost:3000/ffmpeg.js\", \"text/javascript\");\n * ```\n */\nexport const toBlobURL = async (url, mimeType, progress = false, cb) => {\n    const buf = progress\n        ? await downloadWithProgress(url, cb)\n        : await (await fetch(url)).arrayBuffer();\n    const blob = new Blob([buf], { type: mimeType });\n    return URL.createObjectURL(blob);\n};\n","export const MIME_TYPE_JAVASCRIPT = \"text/javascript\";\nexport const MIME_TYPE_WASM = \"application/wasm\";\nexport const CORE_VERSION = \"0.12.1\";\nexport const CORE_URL = `https://unpkg.com/@ffmpeg/core@${CORE_VERSION}/dist/umd/ffmpeg-core.js`;\nexport var FFMessageType;\n(function (FFMessageType) {\n    FFMessageType[\"LOAD\"] = \"LOAD\";\n    FFMessageType[\"EXEC\"] = \"EXEC\";\n    FFMessageType[\"WRITE_FILE\"] = \"WRITE_FILE\";\n    FFMessageType[\"READ_FILE\"] = \"READ_FILE\";\n    FFMessageType[\"DELETE_FILE\"] = \"DELETE_FILE\";\n    FFMessageType[\"RENAME\"] = \"RENAME\";\n    FFMessageType[\"CREATE_DIR\"] = \"CREATE_DIR\";\n    FFMessageType[\"LIST_DIR\"] = \"LIST_DIR\";\n    FFMessageType[\"DELETE_DIR\"] = \"DELETE_DIR\";\n    FFMessageType[\"ERROR\"] = \"ERROR\";\n    FFMessageType[\"DOWNLOAD\"] = \"DOWNLOAD\";\n    FFMessageType[\"PROGRESS\"] = \"PROGRESS\";\n    FFMessageType[\"LOG\"] = \"LOG\";\n    FFMessageType[\"MOUNT\"] = \"MOUNT\";\n    FFMessageType[\"UNMOUNT\"] = \"UNMOUNT\";\n})(FFMessageType || (FFMessageType = {}));\n","/**\n * Generate an unique message ID.\n */\nexport const getMessageID = (() => {\n    let messageID = 0;\n    return () => messageID++;\n})();\n","export const ERROR_UNKNOWN_MESSAGE_TYPE = new Error(\"unknown message type\");\nexport const ERROR_NOT_LOADED = new Error(\"ffmpeg is not loaded, call `await ffmpeg.load()` first\");\nexport const ERROR_TERMINATED = new Error(\"called FFmpeg.terminate()\");\nexport const ERROR_IMPORT_FAILURE = new Error(\"failed to import ffmpeg-core.js\");\n","import { FFMessageType } from \"./const.js\";\nimport { getMessageID } from \"./utils.js\";\nimport { ERROR_TERMINATED, ERROR_NOT_LOADED } from \"./errors.js\";\n/**\n * Provides APIs to interact with ffmpeg web worker.\n *\n * @example\n * ```ts\n * const ffmpeg = new FFmpeg();\n * ```\n */\nexport class FFmpeg {\n    #worker = null;\n    /**\n     * #resolves and #rejects tracks Promise resolves and rejects to\n     * be called when we receive message from web worker.\n     */\n    #resolves = {};\n    #rejects = {};\n    #logEventCallbacks = [];\n    #progressEventCallbacks = [];\n    loaded = false;\n    /**\n     * register worker message event handlers.\n     */\n    #registerHandlers = () => {\n        if (this.#worker) {\n            this.#worker.onmessage = ({ data: { id, type, data }, }) => {\n                switch (type) {\n                    case FFMessageType.LOAD:\n                        this.loaded = true;\n                        this.#resolves[id](data);\n                        break;\n                    case FFMessageType.MOUNT:\n                    case FFMessageType.UNMOUNT:\n                    case FFMessageType.EXEC:\n                    case FFMessageType.WRITE_FILE:\n                    case FFMessageType.READ_FILE:\n                    case FFMessageType.DELETE_FILE:\n                    case FFMessageType.RENAME:\n                    case FFMessageType.CREATE_DIR:\n                    case FFMessageType.LIST_DIR:\n                    case FFMessageType.DELETE_DIR:\n                        this.#resolves[id](data);\n                        break;\n                    case FFMessageType.LOG:\n                        this.#logEventCallbacks.forEach((f) => f(data));\n                        break;\n                    case FFMessageType.PROGRESS:\n                        this.#progressEventCallbacks.forEach((f) => f(data));\n                        break;\n                    case FFMessageType.ERROR:\n                        this.#rejects[id](data);\n                        break;\n                }\n                delete this.#resolves[id];\n                delete this.#rejects[id];\n            };\n        }\n    };\n    /**\n     * Generic function to send messages to web worker.\n     */\n    #send = ({ type, data }, trans = [], signal) => {\n        if (!this.#worker) {\n            return Promise.reject(ERROR_NOT_LOADED);\n        }\n        return new Promise((resolve, reject) => {\n            const id = getMessageID();\n            this.#worker && this.#worker.postMessage({ id, type, data }, trans);\n            this.#resolves[id] = resolve;\n            this.#rejects[id] = reject;\n            signal?.addEventListener(\"abort\", () => {\n                reject(new DOMException(`Message # ${id} was aborted`, \"AbortError\"));\n            }, { once: true });\n        });\n    };\n    on(event, callback) {\n        if (event === \"log\") {\n            this.#logEventCallbacks.push(callback);\n        }\n        else if (event === \"progress\") {\n            this.#progressEventCallbacks.push(callback);\n        }\n    }\n    off(event, callback) {\n        if (event === \"log\") {\n            this.#logEventCallbacks = this.#logEventCallbacks.filter((f) => f !== callback);\n        }\n        else if (event === \"progress\") {\n            this.#progressEventCallbacks = this.#progressEventCallbacks.filter((f) => f !== callback);\n        }\n    }\n    /**\n     * Loads ffmpeg-core inside web worker. It is required to call this method first\n     * as it initializes WebAssembly and other essential variables.\n     *\n     * @category FFmpeg\n     * @returns `true` if ffmpeg core is loaded for the first time.\n     */\n    load = (config = {}, { signal } = {}) => {\n        if (!this.#worker) {\n            this.#worker = new Worker(new URL(\"./worker.js\", import.meta.url), {\n                type: \"module\",\n            });\n            this.#registerHandlers();\n        }\n        return this.#send({\n            type: FFMessageType.LOAD,\n            data: config,\n        }, undefined, signal);\n    };\n    /**\n     * Execute ffmpeg command.\n     *\n     * @remarks\n     * To avoid common I/O issues, [\"-nostdin\", \"-y\"] are prepended to the args\n     * by default.\n     *\n     * @example\n     * ```ts\n     * const ffmpeg = new FFmpeg();\n     * await ffmpeg.load();\n     * await ffmpeg.writeFile(\"video.avi\", ...);\n     * // ffmpeg -i video.avi video.mp4\n     * await ffmpeg.exec([\"-i\", \"video.avi\", \"video.mp4\"]);\n     * const data = ffmpeg.readFile(\"video.mp4\");\n     * ```\n     *\n     * @returns `0` if no error, `!= 0` if timeout (1) or error.\n     * @category FFmpeg\n     */\n    exec = (\n    /** ffmpeg command line args */\n    args, \n    /**\n     * milliseconds to wait before stopping the command execution.\n     *\n     * @defaultValue -1\n     */\n    timeout = -1, { signal } = {}) => this.#send({\n        type: FFMessageType.EXEC,\n        data: { args, timeout },\n    }, undefined, signal);\n    /**\n     * Terminate all ongoing API calls and terminate web worker.\n     * `FFmpeg.load()` must be called again before calling any other APIs.\n     *\n     * @category FFmpeg\n     */\n    terminate = () => {\n        const ids = Object.keys(this.#rejects);\n        // rejects all incomplete Promises.\n        for (const id of ids) {\n            this.#rejects[id](ERROR_TERMINATED);\n            delete this.#rejects[id];\n            delete this.#resolves[id];\n        }\n        if (this.#worker) {\n            this.#worker.terminate();\n            this.#worker = null;\n            this.loaded = false;\n        }\n    };\n    /**\n     * Write data to ffmpeg.wasm.\n     *\n     * @example\n     * ```ts\n     * const ffmpeg = new FFmpeg();\n     * await ffmpeg.load();\n     * await ffmpeg.writeFile(\"video.avi\", await fetchFile(\"../video.avi\"));\n     * await ffmpeg.writeFile(\"text.txt\", \"hello world\");\n     * ```\n     *\n     * @category File System\n     */\n    writeFile = (path, data, { signal } = {}) => {\n        const trans = [];\n        if (data instanceof Uint8Array) {\n            trans.push(data.buffer);\n        }\n        return this.#send({\n            type: FFMessageType.WRITE_FILE,\n            data: { path, data },\n        }, trans, signal);\n    };\n    mount = (fsType, options, mountPoint) => {\n        const trans = [];\n        return this.#send({\n            type: FFMessageType.MOUNT,\n            data: { fsType, options, mountPoint },\n        }, trans);\n    };\n    unmount = (mountPoint) => {\n        const trans = [];\n        return this.#send({\n            type: FFMessageType.UNMOUNT,\n            data: { mountPoint },\n        }, trans);\n    };\n    /**\n     * Read data from ffmpeg.wasm.\n     *\n     * @example\n     * ```ts\n     * const ffmpeg = new FFmpeg();\n     * await ffmpeg.load();\n     * const data = await ffmpeg.readFile(\"video.mp4\");\n     * ```\n     *\n     * @category File System\n     */\n    readFile = (path, \n    /**\n     * File content encoding, supports two encodings:\n     * - utf8: read file as text file, return data in string type.\n     * - binary: read file as binary file, return data in Uint8Array type.\n     *\n     * @defaultValue binary\n     */\n    encoding = \"binary\", { signal } = {}) => this.#send({\n        type: FFMessageType.READ_FILE,\n        data: { path, encoding },\n    }, undefined, signal);\n    /**\n     * Delete a file.\n     *\n     * @category File System\n     */\n    deleteFile = (path, { signal } = {}) => this.#send({\n        type: FFMessageType.DELETE_FILE,\n        data: { path },\n    }, undefined, signal);\n    /**\n     * Rename a file or directory.\n     *\n     * @category File System\n     */\n    rename = (oldPath, newPath, { signal } = {}) => this.#send({\n        type: FFMessageType.RENAME,\n        data: { oldPath, newPath },\n    }, undefined, signal);\n    /**\n     * Create a directory.\n     *\n     * @category File System\n     */\n    createDir = (path, { signal } = {}) => this.#send({\n        type: FFMessageType.CREATE_DIR,\n        data: { path },\n    }, undefined, signal);\n    /**\n     * List directory contents.\n     *\n     * @category File System\n     */\n    listDir = (path, { signal } = {}) => this.#send({\n        type: FFMessageType.LIST_DIR,\n        data: { path },\n    }, undefined, signal);\n    /**\n     * Delete an empty directory.\n     *\n     * @category File System\n     */\n    deleteDir = (path, { signal } = {}) => this.#send({\n        type: FFMessageType.DELETE_DIR,\n        data: { path },\n    }, undefined, signal);\n}\n","export const mimes = {\n  \"ez\": \"application/andrew-inset\",\n  \"aw\": \"application/applixware\",\n  \"atom\": \"application/atom+xml\",\n  \"atomcat\": \"application/atomcat+xml\",\n  \"atomdeleted\": \"application/atomdeleted+xml\",\n  \"atomsvc\": \"application/atomsvc+xml\",\n  \"dwd\": \"application/atsc-dwd+xml\",\n  \"held\": \"application/atsc-held+xml\",\n  \"rsat\": \"application/atsc-rsat+xml\",\n  \"bdoc\": \"application/bdoc\",\n  \"xcs\": \"application/calendar+xml\",\n  \"ccxml\": \"application/ccxml+xml\",\n  \"cdfx\": \"application/cdfx+xml\",\n  \"cdmia\": \"application/cdmi-capability\",\n  \"cdmic\": \"application/cdmi-container\",\n  \"cdmid\": \"application/cdmi-domain\",\n  \"cdmio\": \"application/cdmi-object\",\n  \"cdmiq\": \"application/cdmi-queue\",\n  \"cu\": \"application/cu-seeme\",\n  \"mpd\": \"application/dash+xml\",\n  \"davmount\": \"application/davmount+xml\",\n  \"dbk\": \"application/docbook+xml\",\n  \"dssc\": \"application/dssc+der\",\n  \"xdssc\": \"application/dssc+xml\",\n  \"es\": \"application/ecmascript\",\n  \"ecma\": \"application/ecmascript\",\n  \"emma\": \"application/emma+xml\",\n  \"emotionml\": \"application/emotionml+xml\",\n  \"epub\": \"application/epub+zip\",\n  \"exi\": \"application/exi\",\n  \"fdt\": \"application/fdt+xml\",\n  \"pfr\": \"application/font-tdpfr\",\n  \"geojson\": \"application/geo+json\",\n  \"gml\": \"application/gml+xml\",\n  \"gpx\": \"application/gpx+xml\",\n  \"gxf\": \"application/gxf\",\n  \"gz\": \"application/gzip\",\n  \"hjson\": \"application/hjson\",\n  \"stk\": \"application/hyperstudio\",\n  \"ink\": \"application/inkml+xml\",\n  \"inkml\": \"application/inkml+xml\",\n  \"ipfix\": \"application/ipfix\",\n  \"its\": \"application/its+xml\",\n  \"jar\": \"application/java-archive\",\n  \"war\": \"application/java-archive\",\n  \"ear\": \"application/java-archive\",\n  \"ser\": \"application/java-serialized-object\",\n  \"class\": \"application/java-vm\",\n  \"js\": \"application/javascript\",\n  \"mjs\": \"application/javascript\",\n  \"json\": \"application/json\",\n  \"map\": \"application/json\",\n  \"json5\": \"application/json5\",\n  \"jsonml\": \"application/jsonml+json\",\n  \"jsonld\": \"application/ld+json\",\n  \"lgr\": \"application/lgr+xml\",\n  \"lostxml\": \"application/lost+xml\",\n  \"hqx\": \"application/mac-binhex40\",\n  \"cpt\": \"application/mac-compactpro\",\n  \"mads\": \"application/mads+xml\",\n  \"webmanifest\": \"application/manifest+json\",\n  \"mrc\": \"application/marc\",\n  \"mrcx\": \"application/marcxml+xml\",\n  \"ma\": \"application/mathematica\",\n  \"nb\": \"application/mathematica\",\n  \"mb\": \"application/mathematica\",\n  \"mathml\": \"application/mathml+xml\",\n  \"mbox\": \"application/mbox\",\n  \"mscml\": \"application/mediaservercontrol+xml\",\n  \"metalink\": \"application/metalink+xml\",\n  \"meta4\": \"application/metalink4+xml\",\n  \"mets\": \"application/mets+xml\",\n  \"maei\": \"application/mmt-aei+xml\",\n  \"musd\": \"application/mmt-usd+xml\",\n  \"mods\": \"application/mods+xml\",\n  \"m21\": \"application/mp21\",\n  \"mp21\": \"application/mp21\",\n  \"mp4s\": \"application/mp4\",\n  \"m4p\": \"application/mp4\",\n  \"doc\": \"application/msword\",\n  \"dot\": \"application/msword\",\n  \"mxf\": \"application/mxf\",\n  \"nq\": \"application/n-quads\",\n  \"nt\": \"application/n-triples\",\n  \"cjs\": \"application/node\",\n  \"bin\": \"application/octet-stream\",\n  \"dms\": \"application/octet-stream\",\n  \"lrf\": \"application/octet-stream\",\n  \"mar\": \"application/octet-stream\",\n  \"so\": \"application/octet-stream\",\n  \"dist\": \"application/octet-stream\",\n  \"distz\": \"application/octet-stream\",\n  \"pkg\": \"application/octet-stream\",\n  \"bpk\": \"application/octet-stream\",\n  \"dump\": \"application/octet-stream\",\n  \"elc\": \"application/octet-stream\",\n  \"deploy\": \"application/octet-stream\",\n  \"exe\": \"application/octet-stream\",\n  \"dll\": \"application/octet-stream\",\n  \"deb\": \"application/octet-stream\",\n  \"dmg\": \"application/octet-stream\",\n  \"iso\": \"application/octet-stream\",\n  \"img\": \"application/octet-stream\",\n  \"msi\": \"application/octet-stream\",\n  \"msp\": \"application/octet-stream\",\n  \"msm\": \"application/octet-stream\",\n  \"buffer\": \"application/octet-stream\",\n  \"oda\": \"application/oda\",\n  \"opf\": \"application/oebps-package+xml\",\n  \"ogx\": \"application/ogg\",\n  \"omdoc\": \"application/omdoc+xml\",\n  \"onetoc\": \"application/onenote\",\n  \"onetoc2\": \"application/onenote\",\n  \"onetmp\": \"application/onenote\",\n  \"onepkg\": \"application/onenote\",\n  \"oxps\": \"application/oxps\",\n  \"relo\": \"application/p2p-overlay+xml\",\n  \"xer\": \"application/patch-ops-error+xml\",\n  \"pdf\": \"application/pdf\",\n  \"pgp\": \"application/pgp-encrypted\",\n  \"asc\": \"application/pgp-signature\",\n  \"sig\": \"application/pgp-signature\",\n  \"prf\": \"application/pics-rules\",\n  \"p10\": \"application/pkcs10\",\n  \"p7m\": \"application/pkcs7-mime\",\n  \"p7c\": \"application/pkcs7-mime\",\n  \"p7s\": \"application/pkcs7-signature\",\n  \"p8\": \"application/pkcs8\",\n  \"ac\": \"application/pkix-attr-cert\",\n  \"cer\": \"application/pkix-cert\",\n  \"crl\": \"application/pkix-crl\",\n  \"pkipath\": \"application/pkix-pkipath\",\n  \"pki\": \"application/pkixcmp\",\n  \"pls\": \"application/pls+xml\",\n  \"ai\": \"application/postscript\",\n  \"eps\": \"application/postscript\",\n  \"ps\": \"application/postscript\",\n  \"provx\": \"application/provenance+xml\",\n  \"cww\": \"application/prs.cww\",\n  \"pskcxml\": \"application/pskc+xml\",\n  \"raml\": \"application/raml+yaml\",\n  \"rdf\": \"application/rdf+xml\",\n  \"owl\": \"application/rdf+xml\",\n  \"rif\": \"application/reginfo+xml\",\n  \"rnc\": \"application/relax-ng-compact-syntax\",\n  \"rl\": \"application/resource-lists+xml\",\n  \"rld\": \"application/resource-lists-diff+xml\",\n  \"rs\": \"application/rls-services+xml\",\n  \"rapd\": \"application/route-apd+xml\",\n  \"sls\": \"application/route-s-tsid+xml\",\n  \"rusd\": \"application/route-usd+xml\",\n  \"gbr\": \"application/rpki-ghostbusters\",\n  \"mft\": \"application/rpki-manifest\",\n  \"roa\": \"application/rpki-roa\",\n  \"rsd\": \"application/rsd+xml\",\n  \"rss\": \"application/rss+xml\",\n  \"rtf\": \"application/rtf\",\n  \"sbml\": \"application/sbml+xml\",\n  \"scq\": \"application/scvp-cv-request\",\n  \"scs\": \"application/scvp-cv-response\",\n  \"spq\": \"application/scvp-vp-request\",\n  \"spp\": \"application/scvp-vp-response\",\n  \"sdp\": \"application/sdp\",\n  \"senmlx\": \"application/senml+xml\",\n  \"sensmlx\": \"application/sensml+xml\",\n  \"setpay\": \"application/set-payment-initiation\",\n  \"setreg\": \"application/set-registration-initiation\",\n  \"shf\": \"application/shf+xml\",\n  \"siv\": \"application/sieve\",\n  \"sieve\": \"application/sieve\",\n  \"smi\": \"application/smil+xml\",\n  \"smil\": \"application/smil+xml\",\n  \"rq\": \"application/sparql-query\",\n  \"srx\": \"application/sparql-results+xml\",\n  \"gram\": \"application/srgs\",\n  \"grxml\": \"application/srgs+xml\",\n  \"sru\": \"application/sru+xml\",\n  \"ssdl\": \"application/ssdl+xml\",\n  \"ssml\": \"application/ssml+xml\",\n  \"swidtag\": \"application/swid+xml\",\n  \"tei\": \"application/tei+xml\",\n  \"teicorpus\": \"application/tei+xml\",\n  \"tfi\": \"application/thraud+xml\",\n  \"tsd\": \"application/timestamped-data\",\n  \"toml\": \"application/toml\",\n  \"trig\": \"application/trig\",\n  \"ttml\": \"application/ttml+xml\",\n  \"ubj\": \"application/ubjson\",\n  \"rsheet\": \"application/urc-ressheet+xml\",\n  \"td\": \"application/urc-targetdesc+xml\",\n  \"vxml\": \"application/voicexml+xml\",\n  \"wasm\": \"application/wasm\",\n  \"wgt\": \"application/widget\",\n  \"hlp\": \"application/winhlp\",\n  \"wsdl\": \"application/wsdl+xml\",\n  \"wspolicy\": \"application/wspolicy+xml\",\n  \"xaml\": \"application/xaml+xml\",\n  \"xav\": \"application/xcap-att+xml\",\n  \"xca\": \"application/xcap-caps+xml\",\n  \"xdf\": \"application/xcap-diff+xml\",\n  \"xel\": \"application/xcap-el+xml\",\n  \"xns\": \"application/xcap-ns+xml\",\n  \"xenc\": \"application/xenc+xml\",\n  \"xhtml\": \"application/xhtml+xml\",\n  \"xht\": \"application/xhtml+xml\",\n  \"xlf\": \"application/xliff+xml\",\n  \"xml\": \"application/xml\",\n  \"xsl\": \"application/xml\",\n  \"xsd\": \"application/xml\",\n  \"rng\": \"application/xml\",\n  \"dtd\": \"application/xml-dtd\",\n  \"xop\": \"application/xop+xml\",\n  \"xpl\": \"application/xproc+xml\",\n  \"xslt\": \"application/xml\",\n  \"xspf\": \"application/xspf+xml\",\n  \"mxml\": \"application/xv+xml\",\n  \"xhvml\": \"application/xv+xml\",\n  \"xvml\": \"application/xv+xml\",\n  \"xvm\": \"application/xv+xml\",\n  \"yang\": \"application/yang\",\n  \"yin\": \"application/yin+xml\",\n  \"zip\": \"application/zip\",\n  \"3gpp\": \"video/3gpp\",\n  \"adp\": \"audio/adpcm\",\n  \"amr\": \"audio/amr\",\n  \"au\": \"audio/basic\",\n  \"snd\": \"audio/basic\",\n  \"mid\": \"audio/midi\",\n  \"midi\": \"audio/midi\",\n  \"kar\": \"audio/midi\",\n  \"rmi\": \"audio/midi\",\n  \"mxmf\": \"audio/mobile-xmf\",\n  \"mp3\": \"audio/mpeg\",\n  \"m4a\": \"audio/mp4\",\n  \"mp4a\": \"audio/mp4\",\n  \"mpga\": \"audio/mpeg\",\n  \"mp2\": \"audio/mpeg\",\n  \"mp2a\": \"audio/mpeg\",\n  \"m2a\": \"audio/mpeg\",\n  \"m3a\": \"audio/mpeg\",\n  \"oga\": \"audio/ogg\",\n  \"ogg\": \"audio/ogg\",\n  \"spx\": \"audio/ogg\",\n  \"opus\": \"audio/ogg\",\n  \"s3m\": \"audio/s3m\",\n  \"sil\": \"audio/silk\",\n  \"wav\": \"audio/wav\",\n  \"weba\": \"audio/webm\",\n  \"xm\": \"audio/xm\",\n  \"ttc\": \"font/collection\",\n  \"otf\": \"font/otf\",\n  \"ttf\": \"font/ttf\",\n  \"woff\": \"font/woff\",\n  \"woff2\": \"font/woff2\",\n  \"exr\": \"image/aces\",\n  \"apng\": \"image/apng\",\n  \"avif\": \"image/avif\",\n  \"bmp\": \"image/bmp\",\n  \"cgm\": \"image/cgm\",\n  \"drle\": \"image/dicom-rle\",\n  \"emf\": \"image/emf\",\n  \"fits\": \"image/fits\",\n  \"g3\": \"image/g3fax\",\n  \"gif\": \"image/gif\",\n  \"heic\": \"image/heic\",\n  \"heics\": \"image/heic-sequence\",\n  \"heif\": \"image/heif\",\n  \"heifs\": \"image/heif-sequence\",\n  \"hej2\": \"image/hej2k\",\n  \"hsj2\": \"image/hsj2\",\n  \"ief\": \"image/ief\",\n  \"jls\": \"image/jls\",\n  \"jp2\": \"image/jp2\",\n  \"jpg2\": \"image/jp2\",\n  \"jpeg\": \"image/jpeg\",\n  \"jpg\": \"image/jpeg\",\n  \"jpe\": \"image/jpeg\",\n  \"jph\": \"image/jph\",\n  \"jhc\": \"image/jphc\",\n  \"jpm\": \"image/jpm\",\n  \"jpx\": \"image/jpx\",\n  \"jpf\": \"image/jpx\",\n  \"jxr\": \"image/jxr\",\n  \"jxra\": \"image/jxra\",\n  \"jxrs\": \"image/jxrs\",\n  \"jxs\": \"image/jxs\",\n  \"jxsc\": \"image/jxsc\",\n  \"jxsi\": \"image/jxsi\",\n  \"jxss\": \"image/jxss\",\n  \"ktx\": \"image/ktx\",\n  \"ktx2\": \"image/ktx2\",\n  \"png\": \"image/png\",\n  \"btif\": \"image/prs.btif\",\n  \"pti\": \"image/prs.pti\",\n  \"sgi\": \"image/sgi\",\n  \"svg\": \"image/svg+xml\",\n  \"svgz\": \"image/svg+xml\",\n  \"t38\": \"image/t38\",\n  \"tif\": \"image/tiff\",\n  \"tiff\": \"image/tiff\",\n  \"tfx\": \"image/tiff-fx\",\n  \"webp\": \"image/webp\",\n  \"wmf\": \"image/wmf\",\n  \"disposition-notification\": \"message/disposition-notification\",\n  \"u8msg\": \"message/global\",\n  \"u8dsn\": \"message/global-delivery-status\",\n  \"u8mdn\": \"message/global-disposition-notification\",\n  \"u8hdr\": \"message/global-headers\",\n  \"eml\": \"message/rfc822\",\n  \"mime\": \"message/rfc822\",\n  \"3mf\": \"model/3mf\",\n  \"gltf\": \"model/gltf+json\",\n  \"glb\": \"model/gltf-binary\",\n  \"igs\": \"model/iges\",\n  \"iges\": \"model/iges\",\n  \"msh\": \"model/mesh\",\n  \"mesh\": \"model/mesh\",\n  \"silo\": \"model/mesh\",\n  \"mtl\": \"model/mtl\",\n  \"obj\": \"model/obj\",\n  \"stpz\": \"model/step+zip\",\n  \"stpxz\": \"model/step-xml+zip\",\n  \"stl\": \"model/stl\",\n  \"wrl\": \"model/vrml\",\n  \"vrml\": \"model/vrml\",\n  \"x3db\": \"model/x3d+fastinfoset\",\n  \"x3dbz\": \"model/x3d+binary\",\n  \"x3dv\": \"model/x3d-vrml\",\n  \"x3dvz\": \"model/x3d+vrml\",\n  \"x3d\": \"model/x3d+xml\",\n  \"x3dz\": \"model/x3d+xml\",\n  \"appcache\": \"text/cache-manifest\",\n  \"manifest\": \"text/cache-manifest\",\n  \"ics\": \"text/calendar\",\n  \"ifb\": \"text/calendar\",\n  \"coffee\": \"text/coffeescript\",\n  \"litcoffee\": \"text/coffeescript\",\n  \"css\": \"text/css\",\n  \"csv\": \"text/csv\",\n  \"html\": \"text/html\",\n  \"htm\": \"text/html\",\n  \"shtml\": \"text/html\",\n  \"jade\": \"text/jade\",\n  \"jsx\": \"text/jsx\",\n  \"less\": \"text/less\",\n  \"markdown\": \"text/markdown\",\n  \"md\": \"text/markdown\",\n  \"mml\": \"text/mathml\",\n  \"mdx\": \"text/mdx\",\n  \"n3\": \"text/n3\",\n  \"txt\": \"text/plain\",\n  \"text\": \"text/plain\",\n  \"conf\": \"text/plain\",\n  \"def\": \"text/plain\",\n  \"list\": \"text/plain\",\n  \"log\": \"text/plain\",\n  \"in\": \"text/plain\",\n  \"ini\": \"text/plain\",\n  \"dsc\": \"text/prs.lines.tag\",\n  \"rtx\": \"text/richtext\",\n  \"sgml\": \"text/sgml\",\n  \"sgm\": \"text/sgml\",\n  \"shex\": \"text/shex\",\n  \"slim\": \"text/slim\",\n  \"slm\": \"text/slim\",\n  \"spdx\": \"text/spdx\",\n  \"stylus\": \"text/stylus\",\n  \"styl\": \"text/stylus\",\n  \"tsv\": \"text/tab-separated-values\",\n  \"t\": \"text/troff\",\n  \"tr\": \"text/troff\",\n  \"roff\": \"text/troff\",\n  \"man\": \"text/troff\",\n  \"me\": \"text/troff\",\n  \"ms\": \"text/troff\",\n  \"ttl\": \"text/turtle\",\n  \"uri\": \"text/uri-list\",\n  \"uris\": \"text/uri-list\",\n  \"urls\": \"text/uri-list\",\n  \"vcard\": \"text/vcard\",\n  \"vtt\": \"text/vtt\",\n  \"yaml\": \"text/yaml\",\n  \"yml\": \"text/yaml\",\n  \"3gp\": \"video/3gpp\",\n  \"3g2\": \"video/3gpp2\",\n  \"h261\": \"video/h261\",\n  \"h263\": \"video/h263\",\n  \"h264\": \"video/h264\",\n  \"m4s\": \"video/iso.segment\",\n  \"jpgv\": \"video/jpeg\",\n  \"jpgm\": \"image/jpm\",\n  \"mj2\": \"video/mj2\",\n  \"mjp2\": \"video/mj2\",\n  \"ts\": \"video/mp2t\",\n  \"mp4\": \"video/mp4\",\n  \"mp4v\": \"video/mp4\",\n  \"mpg4\": \"video/mp4\",\n  \"mpeg\": \"video/mpeg\",\n  \"mpg\": \"video/mpeg\",\n  \"mpe\": \"video/mpeg\",\n  \"m1v\": \"video/mpeg\",\n  \"m2v\": \"video/mpeg\",\n  \"ogv\": \"video/ogg\",\n  \"qt\": \"video/quicktime\",\n  \"mov\": \"video/quicktime\",\n  \"webm\": \"video/webm\"\n};\n\nexport function lookup(extn) {\n\tlet tmp = ('' + extn).trim().toLowerCase();\n\tlet idx = tmp.lastIndexOf('.');\n\treturn mimes[!~idx ? tmp : tmp.substring(++idx)];\n}\n","import { toBlobURL } from \"@ffmpeg/util\";\nimport { FFmpeg } from \"@ffmpeg/ffmpeg\";\nimport { lookup } from \"mrmime\";\n\nexport const prettyBytes = (bytes: number): string => {\n\tlet units = [\"B\", \"KB\", \"MB\", \"GB\", \"PB\"];\n\tlet i = 0;\n\twhile (bytes > 1024) {\n\t\tbytes /= 1024;\n\t\ti++;\n\t}\n\tlet unit = units[i];\n\treturn bytes.toFixed(1) + \" \" + unit;\n};\n\nexport const playable = (): boolean => {\n\t// TODO: Fix this\n\t// let video_element = document.createElement(\"video\");\n\t// let mime_type = mime.lookup(filename);\n\t// return video_element.canPlayType(mime_type) != \"\";\n\treturn true; // FIX BEFORE COMMIT - mime import causing issues\n};\n\nexport function loaded(\n\tnode: HTMLVideoElement,\n\t{ autoplay }: { autoplay: boolean }\n): any {\n\tasync function handle_playback(): Promise<void> {\n\t\tif (!autoplay) return;\n\t\tawait node.play();\n\t}\n\n\tnode.addEventListener(\"loadeddata\", handle_playback);\n\n\treturn {\n\t\tdestroy(): void {\n\t\t\tnode.removeEventListener(\"loadeddata\", handle_playback);\n\t\t}\n\t};\n}\n\nexport default async function loadFfmpeg(): Promise<FFmpeg> {\n\tconst ffmpeg = new FFmpeg();\n\tconst baseURL = \"https://unpkg.com/@ffmpeg/core@0.12.4/dist/esm\";\n\n\tawait ffmpeg.load({\n\t\tcoreURL: await toBlobURL(`${baseURL}/ffmpeg-core.js`, \"text/javascript\"),\n\t\twasmURL: await toBlobURL(`${baseURL}/ffmpeg-core.wasm`, \"application/wasm\")\n\t});\n\n\treturn ffmpeg;\n}\n\nexport function blob_to_data_url(blob: Blob): Promise<string> {\n\treturn new Promise((fulfill, reject) => {\n\t\tlet reader = new FileReader();\n\t\treader.onerror = reject;\n\t\treader.onload = () => fulfill(reader.result as string);\n\t\treader.readAsDataURL(blob);\n\t});\n}\n\nexport async function trimVideo(\n\tffmpeg: FFmpeg,\n\tstartTime: number,\n\tendTime: number,\n\tvideoElement: HTMLVideoElement\n): Promise<any> {\n\ttry {\n\t\tconst videoUrl = videoElement.src;\n\t\tconst mimeType = lookup(videoElement.src) || \"video/mp4\";\n\t\tconst blobUrl = await toBlobURL(videoUrl, mimeType);\n\t\tconst response = await fetch(blobUrl);\n\t\tconst vidBlob = await response.blob();\n\t\tconst type = getVideoExtensionFromMimeType(mimeType) || \"mp4\";\n\t\tconst inputName = `input.${type}`;\n\t\tconst outputName = `output.${type}`;\n\n\t\tawait ffmpeg.writeFile(\n\t\t\tinputName,\n\t\t\tnew Uint8Array(await vidBlob.arrayBuffer())\n\t\t);\n\n\t\tlet command = [\n\t\t\t\"-i\",\n\t\t\tinputName,\n\t\t\t\"-ss\",\n\t\t\tstartTime.toString(),\n\t\t\t\"-to\",\n\t\t\tendTime.toString(),\n\t\t\t\"-c:a\",\n\t\t\t\"copy\",\n\t\t\toutputName\n\t\t];\n\n\t\tawait ffmpeg.exec(command);\n\t\tconst outputData = await ffmpeg.readFile(outputName);\n\t\tconst outputBlob = new Blob([outputData], {\n\t\t\ttype: `video/${type}`\n\t\t});\n\n\t\treturn outputBlob;\n\t} catch (error) {\n\t\tconsole.error(\"Error initializing FFmpeg:\", error);\n\t}\n}\n\nconst getVideoExtensionFromMimeType = (mimeType: string): string | null => {\n\tconst videoMimeToExtensionMap: { [key: string]: string } = {\n\t\t\"video/mp4\": \"mp4\",\n\t\t\"video/webm\": \"webm\",\n\t\t\"video/ogg\": \"ogv\",\n\t\t\"video/quicktime\": \"mov\",\n\t\t\"video/x-msvideo\": \"avi\",\n\t\t\"video/x-matroska\": \"mkv\",\n\t\t\"video/mpeg\": \"mpeg\",\n\t\t\"video/3gpp\": \"3gp\",\n\t\t\"video/3gpp2\": \"3g2\",\n\t\t\"video/h261\": \"h261\",\n\t\t\"video/h263\": \"h263\",\n\t\t\"video/h264\": \"h264\",\n\t\t\"video/jpeg\": \"jpgv\",\n\t\t\"video/jpm\": \"jpm\",\n\t\t\"video/mj2\": \"mj2\",\n\t\t\"video/mpv\": \"mpv\",\n\t\t\"video/vnd.ms-playready.media.pyv\": \"pyv\",\n\t\t\"video/vnd.uvvu.mp4\": \"uvu\",\n\t\t\"video/vnd.vivo\": \"viv\",\n\t\t\"video/x-f4v\": \"f4v\",\n\t\t\"video/x-fli\": \"fli\",\n\t\t\"video/x-flv\": \"flv\",\n\t\t\"video/x-m4v\": \"m4v\",\n\t\t\"video/x-ms-asf\": \"asf\",\n\t\t\"video/x-ms-wm\": \"wm\",\n\t\t\"video/x-ms-wmv\": \"wmv\",\n\t\t\"video/x-ms-wmx\": \"wmx\",\n\t\t\"video/x-ms-wvx\": \"wvx\",\n\t\t\"video/x-sgi-movie\": \"movie\",\n\t\t\"video/x-smv\": \"smv\"\n\t};\n\n\treturn videoMimeToExtensionMap[mimeType] || null;\n};\n","<script lang=\"ts\">\n\timport type { HTMLVideoAttributes } from \"svelte/elements\";\n\timport { createEventDispatcher } from \"svelte\";\n\timport { loaded } from \"./utils\";\n\n\timport { resolve_wasm_src } from \"@gradio/wasm/svelte\";\n\n\texport let src: HTMLVideoAttributes[\"src\"] = undefined;\n\n\texport let muted: HTMLVideoAttributes[\"muted\"] = undefined;\n\texport let playsinline: HTMLVideoAttributes[\"playsinline\"] = undefined;\n\texport let preload: HTMLVideoAttributes[\"preload\"] = undefined;\n\texport let autoplay: HTMLVideoAttributes[\"autoplay\"] = undefined;\n\texport let controls: HTMLVideoAttributes[\"controls\"] = undefined;\n\n\texport let currentTime: number | undefined = undefined;\n\texport let duration: number | undefined = undefined;\n\texport let paused: boolean | undefined = undefined;\n\n\texport let node: HTMLVideoElement | undefined = undefined;\n\n\texport let processingVideo = false;\n\n\tconst dispatch = createEventDispatcher();\n</script>\n\n{#await resolve_wasm_src(src) then resolved_src}\n\t<!--\n\tThe spread operator with `$$props` or `$$restProps` can't be used here\n\tto pass props from the parent component to the <video> element\n\tbecause of its unexpected behavior: https://github.com/sveltejs/svelte/issues/7404\n\tFor example, if we add {...$$props} or {...$$restProps}, the boolean props aside it like `controls` will be compiled as string \"true\" or \"false\" on the actual DOM.\n\tThen, even when `controls` is false, the compiled DOM would be `<video controls=\"false\">` which is equivalent to `<video controls>` since the string \"false\" is even truthy.\n-->\n\t<div class:hidden={!processingVideo} class=\"overlay\">\n\t\t<span class=\"load-wrap\">\n\t\t\t<span class=\"loader\" />\n\t\t</span>\n\t</div>\n\t<video\n\t\tsrc={resolved_src}\n\t\t{muted}\n\t\t{playsinline}\n\t\t{preload}\n\t\t{autoplay}\n\t\t{controls}\n\t\ton:loadeddata={dispatch.bind(null, \"loadeddata\")}\n\t\ton:click={dispatch.bind(null, \"click\")}\n\t\ton:play={dispatch.bind(null, \"play\")}\n\t\ton:pause={dispatch.bind(null, \"pause\")}\n\t\ton:ended={dispatch.bind(null, \"ended\")}\n\t\ton:mouseover={dispatch.bind(null, \"mouseover\")}\n\t\ton:mouseout={dispatch.bind(null, \"mouseout\")}\n\t\ton:focus={dispatch.bind(null, \"focus\")}\n\t\ton:blur={dispatch.bind(null, \"blur\")}\n\t\tbind:currentTime\n\t\tbind:duration\n\t\tbind:paused\n\t\tbind:this={node}\n\t\tuse:loaded={{ autoplay: autoplay ?? false }}\n\t\tdata-testid={$$props[\"data-testid\"]}\n\t\tcrossorigin=\"anonymous\"\n\t>\n\t\t<slot />\n\t</video>\n{:catch error}\n\t<p style=\"color: red;\">{error.message}</p>\n{/await}\n\n<style>\n\t.overlay {\n\t\tposition: absolute;\n\t\tbackground-color: rgba(0, 0, 0, 0.4);\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n\n\t.hidden {\n\t\tdisplay: none;\n\t}\n\n\t.load-wrap {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\theight: 100%;\n\t}\n\n\t.loader {\n\t\tdisplay: flex;\n\t\tposition: relative;\n\t\tbackground-color: var(--border-color-accent-subdued);\n\t\tanimation: shadowPulse 2s linear infinite;\n\t\tbox-shadow: -24px 0 var(--border-color-accent-subdued),\n\t\t\t24px 0 var(--border-color-accent-subdued);\n\t\tmargin: var(--spacing-md);\n\t\tborder-radius: 50%;\n\t\twidth: 10px;\n\t\theight: 10px;\n\t\tscale: 0.5;\n\t}\n\n\t@keyframes shadowPulse {\n\t\t33% {\n\t\t\tbox-shadow: -24px 0 var(--border-color-accent-subdued), 24px 0 #fff;\n\t\t\tbackground: #fff;\n\t\t}\n\t\t66% {\n\t\t\tbox-shadow: -24px 0 #fff, 24px 0 #fff;\n\t\t\tbackground: var(--border-color-accent-subdued);\n\t\t}\n\t\t100% {\n\t\t\tbox-shadow: -24px 0 #fff, 24px 0 var(--border-color-accent-subdued);\n\t\t\tbackground: #fff;\n\t\t}\n\t}\n\n\tvideo {\n\t\tposition: inherit;\n\t\tbackground-color: black;\n\t\twidth: var(--size-full);\n\t\theight: var(--size-full);\n\t\tobject-fit: contain;\n\t\tborder-radius: var(--radius-xl);\n\t}\n</style>\n","<script lang=\"ts\">\n\timport Video from \"./shared/Video.svelte\";\n\timport { playable } from \"./shared/utils\";\n\n\texport let type: \"gallery\" | \"table\";\n\texport let selected = false;\n\texport let value: string;\n\texport let samples_dir: string;\n\tlet video: HTMLVideoElement;\n\n\tasync function init(): Promise<void> {\n\t\tvideo.muted = true;\n\t\tvideo.playsInline = true;\n\t\tvideo.controls = false;\n\t\tvideo.setAttribute(\"muted\", \"\");\n\n\t\tawait video.play();\n\t\tvideo.pause();\n\t}\n</script>\n\n{#if playable()}\n\t<div\n\t\tclass=\"container\"\n\t\tclass:table={type === \"table\"}\n\t\tclass:gallery={type === \"gallery\"}\n\t\tclass:selected\n\t>\n\t\t<Video\n\t\t\tmuted\n\t\t\tplaysinline\n\t\t\tbind:node={video}\n\t\t\ton:loadeddata={init}\n\t\t\ton:mouseover={video.play.bind(video)}\n\t\t\ton:mouseout={video.pause.bind(video)}\n\t\t\tsrc={samples_dir + value}\n\t\t/>\n\t</div>\n{:else}\n\t<div>{value}</div>\n{/if}\n\n<style>\n\t.container {\n\t\tflex: none;\n\t\tborder: 2px solid var(--border-color-primary);\n\t\tborder-radius: var(--radius-lg);\n\t\tmax-width: none;\n\t}\n\n\t.container:hover,\n\t.container.selected {\n\t\tborder-color: var(--border-color-accent);\n\t}\n\t.container.table {\n\t\tmargin: 0 auto;\n\t\twidth: var(--size-20);\n\t\theight: var(--size-20);\n\t\tobject-fit: cover;\n\t}\n\n\t.container.gallery {\n\t\theight: var(--size-20);\n\t\tmax-height: var(--size-20);\n\t\tobject-fit: cover;\n\t}\n</style>\n"],"names":["ERROR_RESPONSE_BODY_READER","ERROR_INCOMPLETED_DOWNLOAD","HeaderContentLength","downloadWithProgress","url","cb","resp","buf","total","reader","chunks","received","done","value","delta","data","position","chunk","e","toBlobURL","mimeType","progress","blob","FFMessageType","getMessageID","messageID","ERROR_NOT_LOADED","ERROR_TERMINATED","FFmpeg","#worker","#resolves","#rejects","#logEventCallbacks","#progressEventCallbacks","#registerHandlers","id","type","f","#send","trans","signal","resolve","reject","event","callback","config","args","timeout","ids","path","fsType","options","mountPoint","encoding","oldPath","newPath","mimes","lookup","extn","tmp","idx","prettyBytes","bytes","units","i","unit","playable","loaded","node","autoplay","handle_playback","loadFfmpeg","ffmpeg","baseURL","trimVideo","startTime","endTime","videoElement","videoUrl","blobUrl","vidBlob","getVideoExtensionFromMimeType","inputName","outputName","command","outputData","error","createEventDispatcher","t_value","ctx","insert","target","p","anchor","dirty","set_data","t","attr","video","video_src_value","video_data_testid_value","div","listen","current","handle_promise","promise","resolve_wasm_src","info","src","$$props","muted","playsinline","preload","controls","currentTime","duration","paused","processingVideo","dispatch","$$value","is_function","toggle_class","video_1_changes","selected","samples_dir","init"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7]}